{"version":3,"sources":["redux/actions/get-all-hot-dogs-actions.js","redux/actions/add-hot-dog-actions.js","redux/actions/delete-hot-dog-actions.js","redux/actions/add-form-actions.js","redux/actions/edit-form-actions.js","redux/actions/update-hot-dog-actions.js","redux/actions/loading-actions.js","components/header/header.js","components/header/index.js","redux/selectors/hot-dogs-selector.js","redux/selectors/add-form-selector.js","redux/selectors/edit-form-selector.js","redux/selectors/loading-selector.js","components/hot-dog-item/hot-dog-item.js","components/hot-dog-item/index.js","components/hot-dog-list/hot-dog-list.js","components/hot-dog-list/index.js","components/add-form/add-form.js","components/add-form/index.js","components/app/index.js","components/app/App.js","redux/reducers/all-hot-dogs-reducer.js","redux/reducers/add-form-reducer.js","redux/reducers/edit-form-reducer.js","redux/reducers/loading-reducer.js","redux/reducers/index.js","redux/constants/index.js","services/http-request/http-request.js","sagas/get-all-hot-dogs.sagas.js","sagas/add-hot-dog-sagas.js","sagas/delete-hot-dog-sagas.js","sagas/update-hot-dog-sagas.js","sagas/root-sagas.js","store.js","index.js"],"names":["getAllHotDogsStart","createAction","getAllHotDogsSuccess","getAllHotDogsFail","addHotDogStart","addHotDogSuccess","addHotDogFail","deleteHotDogStart","deleteHotDogSuccess","deleteHotDogFail","showAddForm","hideAddForm","showEditForm","hideEditForm","updateHotDogStart","updateHotDogSuccess","updateHotDogFail","loadingStart","loadingStop","mapDispatchToProps","Header","connect","state","className","src","alt","onClick","allHotDogsSelector","createSelector","hotDogs","addFormSelector","addForm","isVisibleAddForm","editFormSelector","editForm","isVisibleEditForm","loadingStatusSelector","loading","isLoading","HotDogItem","data","useForm","register","handleSubmit","errors","names","map","el","title","id","hotdog_id","price","description","img","onSubmit","updateHotDog","type","name","defaultValue","ref","required","validate","occupied","value","isOccupied","forEach","HotDogList","allHotDogs","useEffect","key","AddForm","saveHotDog","placeholder","App","isVisiblePopup","reducerMap","payload","allHotDogsReducer","handleActions","addFormReducer","editFormReducer","loadingReducer","reducers","httpRequest","url","a","method","body","headers","JSON","stringify","fetch","response","console","log","json","ok","Error","message","callgetAllHotDogs","getAllHotDogsSagas","call","put","takeEvery","callAddHotDog","addHotDogSagas","callDeleteHotDog","deleteHotDogSagas","callUpdateHotDog","updateHotDogSagas","rootSagas","all","Object","values","fork","initialState","enhancerList","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","store","sagaMiddleware","createSagaMiddleware","middlewares","createStore","combineReducers","compose","applyMiddleware","run","getStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1edb4718.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\n\nexport const getAllHotDogsStart = createAction('GET_ALL_HOT_DOGS_START');\nexport const getAllHotDogsSuccess = createAction('GET_ALL_HOT_DOGS_SUCCESS');\nexport const getAllHotDogsFail = createAction('GET_ALL_HOT_DOGS_FAIL');\n","import { createAction } from 'redux-actions';\n\nexport const addHotDogStart = createAction('ADD_HOT_DOG_START');\nexport const addHotDogSuccess = createAction('ADD_HOT_DOG_SUCCESS');\nexport const addHotDogFail = createAction('ADD_HOT_DOG_FAIL');\n","import { createAction } from 'redux-actions';\n\nexport const deleteHotDogStart = createAction('DELETE_HOT_DOG_START');\nexport const deleteHotDogSuccess = createAction('DELETE_HOT_DOG_SUCCESS');\nexport const deleteHotDogFail = createAction('DELETE_HOT_DOG_FAIL');\n","import { createAction } from 'redux-actions';\n\nexport const showAddForm= createAction('SHOW_ADD_FORM');\nexport const hideAddForm= createAction('HIDE_ADD_FORM');","import { createAction } from 'redux-actions';\n\nexport const showEditForm = createAction('SHOW_EDIT_FORM');\nexport const hideEditForm = createAction('HIDE_EDIT_FORM');","import { createAction } from 'redux-actions';\n\nexport const updateHotDogStart = createAction('UPDATE_HOT_DOG_START');\nexport const updateHotDogSuccess = createAction('UPDATE_HOT_DOG_SUCCESS');\nexport const updateHotDogFail = createAction('UPDATE_HOT_DOG_FAIL');\n","import { createAction } from 'redux-actions';\n\nexport const loadingStart = createAction('LOADING_START');\nexport const loadingStop = createAction('LOADING_STOP');\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { showAddForm } from '../../redux/actions';\nimport './header.css';\n\nconst Header = ({ showAddForm }) => {\n    return(\n        <header>\n            <div className='wrapper'>\n                <div>\n                    <img src='https://pngimg.com/uploads/hot_dog/hot_dog_PNG10232.png' alt='logo-hot-dog' />\n                    <button>CRUD</button>\n                </div>\n                <button onClick={ showAddForm }>Add hot-dog</button>\n            </div>\n        </header>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n    }\n}\n\nconst mapDispatchToProps = {\n    showAddForm\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Header);","import Header from './header';\n\nexport default Header;","import { createSelector } from 'reselect';\nimport { HOT_DOGS_KEY } from '../constants';\n\nconst getHotDogs = (state) => state[HOT_DOGS_KEY];\n\nexport const allHotDogsSelector = createSelector(getHotDogs, (hotDogs) => hotDogs.hotDogs);\n","import { createSelector } from 'reselect';\nimport { ADD_FORM_KEY } from '../constants';\n\nconst addForm = (state) => state[ADD_FORM_KEY];\n\nexport const addFormSelector = createSelector(addForm, (addForm) => addForm.isVisibleAddForm);\n","import { createSelector } from 'reselect';\nimport { EDIT_FORM_KEY } from '../constants';\n\nconst editForm = (state) => state[EDIT_FORM_KEY];\n\nexport const editFormSelector = createSelector(editForm, (editForm) => editForm.isVisibleEditForm);\n","import { createSelector } from 'reselect';\nimport { LOADING_KEY } from '../constants';\n\nconst getLoadingStatus = (state) => state[LOADING_KEY];\n\nexport const loadingStatusSelector = createSelector(getLoadingStatus, (loading) => loading.isLoading);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { showEditForm, hideEditForm } from '../../redux/actions'\nimport { editFormSelector, allHotDogsSelector } from '../../redux/selectors';\nimport { deleteHotDogStart, updateHotDogStart } from '../../redux/actions';\n\nimport './hot-dog-item.css';\n\nconst HotDogItem = ({data, isVisibleEditForm, showEditForm, deleteHotDogStart, updateHotDogStart, hideEditForm, hotDogs}) => {\n\n    const { register, handleSubmit, errors } = useForm(); \n    const names = hotDogs? hotDogs.map((el) => el.title): [];\n\n    const { hotdog_id: id, title, price, description, img } = data;\n\n    const updateHotDog = (data) => {\n        updateHotDogStart(data);\n        hideEditForm();\n    }\n\n    return (\n        <li className='hot-dog-item'>\n            <img src={img} alt=\"\"/>\n            {isVisibleEditForm !== id &&\n                <>\n                    <h3 className='hot-dog-item__title'>{title}</h3>\n                    <p className='hot-dog-item__price'>{price} $</p>\n                    <p className='hot-dog-item__description'>{description}</p>\n                    <button onClick={() => showEditForm(id)} className='hot-dog-item__btn'>Edit</button>\n                </>\n            }\n\n            {isVisibleEditForm === id && \n                <form className='edit-form' onSubmit={handleSubmit((data) => updateHotDog({data, id}))}>\n                    {errors.title && errors.title.type === 'occupied' && (\n                        <p className='error'>You already have this point.</p>\n                    )}\n                    <input name='img' type='text' defaultValue={img} ref={register({ required: true})} />\n\n                    <input name='title' type='text' defaultValue={title} ref={register({ required: true, validate: {\n                        occupied: (value) => {\n                            let isOccupied;\n                            names.forEach(el => {\n                                if(value === el && value !==title){\n                                    isOccupied = false\n                                }\n                            });\n                            return isOccupied;\n                        } \n                    } })}/>\n                    <input name='price' type='number' defaultValue={price} ref={register({ required: true })}/>\n                    <textarea \n                        name='description' \n                        className='edit-form__description'\n                        defaultValue={description} \n                        ref={register({ required: true })}>\n                    </textarea>\n                    <button  type='button' className='hot-dog-item__btn' onClick={() => deleteHotDogStart(id)} >Delete</button>\n                    <button type='submit' className='hot-dog-item__btn'>Upgrade</button>\n                </form>\n            }\n        </li>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isVisibleEditForm: editFormSelector(state),\n        hotDogs: allHotDogsSelector(state)\n    }\n}\n\nconst mapDispatchToProps = {\n    showEditForm,\n    hideEditForm,\n    deleteHotDogStart,\n    updateHotDogStart\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(HotDogItem);\n","import HotDogItem from './hot-dog-item';\n\nexport default HotDogItem;","import React, { useEffect } from 'react';\nimport HotDogItem from '../hot-dog-item';\nimport { connect } from 'react-redux';\nimport { getAllHotDogsStart } from '../../redux/actions';\nimport { allHotDogsSelector, loadingStatusSelector } from '../../redux/selectors';\n\nimport './hot-dog-list.css';\n\nconst HotDogList = ({getAllHotDogsStart, allHotDogs, isLoading}) => {\n\n    useEffect(() => {\n        !isLoading && getAllHotDogsStart();\n    }, [isLoading, getAllHotDogsStart]);\n\n    return (\n        <ul className='hot-dog-list'>\n            {allHotDogs &&\n            allHotDogs.map((el) => {\n                return <HotDogItem key={el.hotdog_id} data={el} />\n            })}\n        </ul>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        allHotDogs: allHotDogsSelector(state),\n        isLoading: loadingStatusSelector(state), \n    }\n}\n\nconst mapDispatchToProps = {\n    getAllHotDogsStart\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(HotDogList);\n","import HotDogList from './hot-dog-list';\n\nexport default HotDogList;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { hideAddForm, addHotDogStart, getAllHotDogsStart } from '../../redux/actions';\nimport { allHotDogsSelector } from '../../redux/selectors';\nimport './add-form.css';\n\nconst AddForm = ({ hideAddForm, hotDogs, addHotDogStart }) => {\n\n    const names = hotDogs? hotDogs.map((el) => el.title): [];\n    const { register, handleSubmit, errors } = useForm();\n\n    const saveHotDog = (data) => {\n        addHotDogStart(data);\n        hideAddForm();\n    }\n\n    return (\n        <div className='add-form__wrapper'>\n            <div className='add-form'>\n                <h3 className='add-form__title'>Add new hot-dog</h3>\n                <form className='add-form__form' onSubmit={handleSubmit((data) => saveHotDog(data))}>\n                    <input type='text' placeholder='Name' name = 'title' ref={register({ required: true, validate: {\n                        occupied: (value) => {\n                            let isOccupied;\n                            names.forEach(el => {\n                                if(value === el){\n                                    isOccupied = false\n                                }\n                            });\n                            return isOccupied;\n                        }\n                    } })}/>\n\n                    {errors.title && errors.title.type === 'occupied' && (\n                        <p className='error'>You already have this point.</p>\n                    )}\n\n                    <input type='number' placeholder='Price' name='price' ref={register({ required: true })}/>\n                    <input type='text' placeholder='Description' name='description' ref={register({ required: true })}/>\n                    <input type='text' placeholder='Image url'  name='img' ref={register({ required: true })}/>\n                    <div className='form__wrapper-btn'>\n                        <button type='button' onClick={hideAddForm}>No Thanks</button>\n                        <button type='submit'>Add</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        hotDogs: allHotDogsSelector(state)\n    }\n}\n\nconst mapDispatchToProps = {\n    hideAddForm,\n    addHotDogStart,\n    getAllHotDogsStart\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(AddForm);\n\n","import AddForm from './add-form';\n\nexport default AddForm;","import App from './App';\n\nexport default App;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../header';\nimport HotDogList from '../hot-dog-list';\nimport AddForm from '../add-form';\nimport { addFormSelector } from '../../redux/selectors';\n\nimport './app.css';\n\nconst App = ({isVisiblePopup}) => {\n  \n  return (\n    <div>\n      <Header />\n      <HotDogList />\n      { isVisiblePopup && <AddForm /> }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isVisiblePopup: addFormSelector(state)\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n)(App);","import { handleActions } from 'redux-actions';\nimport { getAllHotDogsSuccess } from '../actions';\n\nconst initialState = {\n  hotDogs: null,\n};\n\nconst reducerMap = {\n  [getAllHotDogsSuccess]: (state, { payload }) => {\n    return {\n      ...state,\n      hotDogs: [...payload],\n    };\n  },\n};\n\nexport const allHotDogsReducer = handleActions(reducerMap, initialState);\n","import { handleActions } from 'redux-actions';\nimport { showAddForm, hideAddForm } from '../actions';\n\nconst initialState = {\n    isVisibleAddForm: false,\n};\n\nconst reducerMap = {\n  [showAddForm]: (state) => {\n    return {\n      ...state,\n      isVisibleAddForm: true,\n    };\n  },\n  [hideAddForm]: (state) => {\n    return {\n      ...state,\n      isVisibleAddForm: false,\n    };\n  },\n};\n\nexport const addFormReducer = handleActions(reducerMap, initialState);\n","import { handleActions } from 'redux-actions';\nimport { showEditForm, hideEditForm } from '../actions';\n\nconst initialState = {\n    isVisibleEditForm: false,\n};\n\nconst reducerMap = {\n  [showEditForm]: (state, { payload }) => {\n    return {\n      ...state,\n      isVisibleEditForm: payload,\n    };\n  },\n  [hideEditForm]: (state) => {\n    return {\n      ...state,\n      isVisibleEditForm: false,\n    };\n  },\n};\n\nexport const editFormReducer = handleActions(reducerMap, initialState);\n","import { handleActions } from 'redux-actions';\nimport { loadingStart, loadingStop } from '../actions';\n\nconst initialState = {\n  isLoading: false,\n};\n\nconst reducerMap = {\n  [loadingStart]: (state) => {\n    return {\n      ...state,\n      isLoading: true,\n    };\n  },\n  [loadingStop]: (state) => {\n    return {\n      ...state,\n      isLoading: false,\n    };\n  },\n};\n\nexport const loadingReducer = handleActions(reducerMap, initialState);","import { allHotDogsReducer } from './all-hot-dogs-reducer';\nimport { addFormReducer } from './add-form-reducer'\nimport { editFormReducer } from './edit-form-reducer'\nimport { loadingReducer } from './loading-reducer';\n\nimport { HOT_DOGS_KEY, ADD_FORM_KEY, EDIT_FORM_KEY , LOADING_KEY} from '../constants';\n\nconst reducers = {\n  [HOT_DOGS_KEY]: allHotDogsReducer,\n  [ADD_FORM_KEY]: addFormReducer,\n  [EDIT_FORM_KEY]: editFormReducer,\n  [LOADING_KEY]: loadingReducer,\n};\n\nexport const getReducers = () => ({ ...reducers });","export const HOT_DOGS_KEY = 'hotDogs';\nexport const ADD_FORM_KEY = 'addForm';\nexport const EDIT_FORM_KEY = 'editForm';\nexport const LOADING_KEY = 'loading';\n","export const httpRequest = async (url, method = 'GET', body = null, headers = {}) => {\n  try {\n    if (body) {\n      body = JSON.stringify(body);\n      headers['Content-Type'] = 'application/json';\n    }\n    const response = await fetch(url, { method, body, headers });\n    console.log(response);\n    const data = await response.json();\n\n    if (!response.ok) {\n      throw new Error(data.message);\n    }\n    return data;\n  } catch (e) {\n    throw e;\n  }\n};\n","import { takeEvery, put, call } from 'redux-saga/effects';\nimport { httpRequest } from '../services';\nimport {\n  getAllHotDogsStart,\n  getAllHotDogsFail,\n  getAllHotDogsSuccess,\n} from '../redux/actions';\n\nfunction* callgetAllHotDogs() {\n  try {\n    const data = yield call(httpRequest, `/api`, 'GET');\n    yield put(getAllHotDogsSuccess(data));\n  } catch (e) {\n    console.log('Something is going wrong!')\n    yield call(getAllHotDogsFail);\n  }\n}\n\nexport function* getAllHotDogsSagas() {\n  yield takeEvery(getAllHotDogsStart, callgetAllHotDogs);\n}","import { takeEvery, put, call } from 'redux-saga/effects';\nimport { httpRequest } from '../services';\nimport {\n  addHotDogStart,\n  addHotDogFail,\n  addHotDogSuccess,\n  loadingStart,\n  loadingStop\n} from '../redux/actions';\n\nfunction* callAddHotDog({ payload }) {\n  try {\n    yield put(loadingStart());\n    const data = yield call(httpRequest, `/api/create`, 'POST', payload);\n    yield put(addHotDogSuccess(data));\n  } catch (e) {\n    console.log('Something is going wrong!')\n    yield call(addHotDogFail);\n  } finally {\n    yield put(loadingStop());\n  }\n}\n\nexport function* addHotDogSagas() {\n  yield takeEvery(addHotDogStart, callAddHotDog);\n}","import { takeEvery, put, call } from 'redux-saga/effects';\nimport { httpRequest } from '../services';\nimport {\n  deleteHotDogStart,\n  deleteHotDogFail,\n  deleteHotDogSuccess,\n  loadingStart,\n  loadingStop\n} from '../redux/actions';\n\nfunction* callDeleteHotDog({ payload }) {\n  try {\n    yield put(loadingStart());\n    const data = yield call(httpRequest, `/api/delete/${payload}`, 'DELETE');\n    yield put(deleteHotDogSuccess(data));\n  } catch (e) {\n    console.log('Something is going wrong!')\n    yield call(deleteHotDogFail);\n  } finally {\n    yield put(loadingStop());\n  }\n}\n\nexport function* deleteHotDogSagas() {\n  yield takeEvery(deleteHotDogStart, callDeleteHotDog);\n}","import { takeEvery, put, call } from 'redux-saga/effects';\nimport { httpRequest } from '../services';\nimport {\n  updateHotDogStart,\n  updateHotDogFail,\n  updateHotDogSuccess,\n  loadingStart,\n  loadingStop\n} from '../redux/actions';\n\nfunction* callUpdateHotDog({ payload }) {\n  try {\n    yield put(loadingStart());\n    const data = yield call(httpRequest, `/api/update/${payload.id}`, 'PUT', payload.data);\n    yield put(updateHotDogSuccess(data));\n  } catch (e) {\n    console.log('Something is going wrong!')\n    yield call(updateHotDogFail);\n  } finally {\n    yield put(loadingStop());\n  }\n}\n\nexport function* updateHotDogSagas() {\n  yield takeEvery(updateHotDogStart, callUpdateHotDog);\n}","import { all, fork } from 'redux-saga/effects';\nimport * as getAllHotDogsSagas from './get-all-hot-dogs.sagas';\nimport * as addHotDogSagas from './add-hot-dog-sagas';\nimport * as deleteHotDogSagas from './delete-hot-dog-sagas';\nimport * as updateHotDogSagas from './update-hot-dog-sagas';\n\nexport function* rootSagas() {\n  yield all(\n    [\n      ...Object.values(getAllHotDogsSagas),\n      ...Object.values(addHotDogSagas),\n      ...Object.values(deleteHotDogSagas),\n      ...Object.values(deleteHotDogSagas),\n      ...Object.values(updateHotDogSagas),\n    ].map(fork)\n  );\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {getReducers} from './redux/reducers';\nimport {rootSagas} from './sagas';\n\nconst initialState = {};\n\nconst enhancerList = [];\n// eslint-disable-next-line no-underscore-dangle\nconst devToolsExtension = window && window.__REDUX_DEVTOOLS_EXTENSION__;\n\nif (typeof devToolsExtension === 'function') {\n  enhancerList.push(devToolsExtension());\n}\n\nexport const getStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n\n  const store = createStore(\n    combineReducers(getReducers()),\n    initialState,\n    compose(applyMiddleware(...middlewares), ...enhancerList)\n  );\n  sagaMiddleware.run(rootSagas);\n  return store;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/app';\nimport { getStore } from './store';\n\nconst store = getStore();\n\nReactDOM.render(\n    (<Provider store={store}>\n        <App />\n    </Provider>), document.getElementById('root')\n);\n"],"sourceRoot":""}