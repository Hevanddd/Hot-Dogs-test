{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { httpRequest } from '../services';\nimport { updateHotDogStart, updateHotDogFail, updateHotDogSuccess, loadingStart, loadingStop } from '../redux/actions';\n\nfunction* callUpdateHotDog({\n  payload\n}) {\n  try {\n    yield put(loadingStart());\n    const data = yield call(httpRequest, `/api/update/${payload.id}`, 'PUT', payload.data);\n    yield put(updateHotDogSuccess(data));\n  } catch (e) {\n    console.log('Something is going wrong!');\n    yield call(updateHotDogFail);\n  } finally {\n    yield put(loadingStop());\n  }\n}\n\nexport function* updateHotDogSagas() {\n  yield takeEvery(updateHotDogStart, callUpdateHotDog);\n}","map":{"version":3,"sources":["/Users/igor/Desktop/testTask/client/src/sagas/update-hot-dog-sagas.js"],"names":["takeEvery","put","call","httpRequest","updateHotDogStart","updateHotDogFail","updateHotDogSuccess","loadingStart","loadingStop","callUpdateHotDog","payload","data","id","e","console","log","updateHotDogSagas"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SACEC,iBADF,EAEEC,gBAFF,EAGEC,mBAHF,EAIEC,YAJF,EAKEC,WALF,QAMO,kBANP;;AAQA,UAAUC,gBAAV,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAAwC;AACtC,MAAI;AACF,UAAMT,GAAG,CAACM,YAAY,EAAb,CAAT;AACA,UAAMI,IAAI,GAAG,MAAMT,IAAI,CAACC,WAAD,EAAe,eAAcO,OAAO,CAACE,EAAG,EAAxC,EAA2C,KAA3C,EAAkDF,OAAO,CAACC,IAA1D,CAAvB;AACA,UAAMV,GAAG,CAACK,mBAAmB,CAACK,IAAD,CAApB,CAAT;AACD,GAJD,CAIE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACA,UAAMb,IAAI,CAACG,gBAAD,CAAV;AACD,GAPD,SAOU;AACR,UAAMJ,GAAG,CAACO,WAAW,EAAZ,CAAT;AACD;AACF;;AAED,OAAO,UAAUQ,iBAAV,GAA8B;AACnC,QAAMhB,SAAS,CAACI,iBAAD,EAAoBK,gBAApB,CAAf;AACD","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\nimport { httpRequest } from '../services';\nimport {\n  updateHotDogStart,\n  updateHotDogFail,\n  updateHotDogSuccess,\n  loadingStart,\n  loadingStop\n} from '../redux/actions';\n\nfunction* callUpdateHotDog({ payload }) {\n  try {\n    yield put(loadingStart());\n    const data = yield call(httpRequest, `/api/update/${payload.id}`, 'PUT', payload.data);\n    yield put(updateHotDogSuccess(data));\n  } catch (e) {\n    console.log('Something is going wrong!')\n    yield call(updateHotDogFail);\n  } finally {\n    yield put(loadingStop());\n  }\n}\n\nexport function* updateHotDogSagas() {\n  yield takeEvery(updateHotDogStart, callUpdateHotDog);\n}"]},"metadata":{},"sourceType":"module"}