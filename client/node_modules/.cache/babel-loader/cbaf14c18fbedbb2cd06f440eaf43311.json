{"ast":null,"code":"import _regeneratorRuntime from\"/Users/igor/Desktop/testTask/client/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(callUpdateHotDog),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(updateHotDogSagas);import{takeEvery,put,call}from'redux-saga/effects';import{httpRequest}from'../services';import{updateHotDogStart,updateHotDogFail,updateHotDogSuccess,loadingStart,loadingStop}from'../redux/actions';function callUpdateHotDog(_ref){var payload,data;return _regeneratorRuntime.wrap(function callUpdateHotDog$(_context){while(1){switch(_context.prev=_context.next){case 0:payload=_ref.payload;_context.prev=1;_context.next=4;return put(loadingStart());case 4:_context.next=6;return call(httpRequest,\"/api/update/\".concat(payload.id),'PUT',payload.data);case 6:data=_context.sent;_context.next=9;return put(updateHotDogSuccess(data));case 9:_context.next=16;break;case 11:_context.prev=11;_context.t0=_context[\"catch\"](1);console.log('Something is going wrong!');_context.next=16;return call(updateHotDogFail);case 16:_context.prev=16;_context.next=19;return put(loadingStop());case 19:return _context.finish(16);case 20:case\"end\":return _context.stop();}}},_marked,null,[[1,11,16,20]]);}export function updateHotDogSagas(){return _regeneratorRuntime.wrap(function updateHotDogSagas$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeEvery(updateHotDogStart,callUpdateHotDog);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/Users/igor/Desktop/testTask/client/src/sagas/update-hot-dog-sagas.js"],"names":["callUpdateHotDog","updateHotDogSagas","takeEvery","put","call","httpRequest","updateHotDogStart","updateHotDogFail","updateHotDogSuccess","loadingStart","loadingStop","payload","id","data","console","log"],"mappings":"+JAUUA,gB,iDAaOC,iB,EAvBjB,OAASC,SAAT,CAAoBC,GAApB,CAAyBC,IAAzB,KAAqC,oBAArC,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OACEC,iBADF,CAEEC,gBAFF,CAGEC,mBAHF,CAIEC,YAJF,CAKEC,WALF,KAMO,kBANP,CAQA,QAAUV,CAAAA,gBAAV,iJAA6BW,OAA7B,MAA6BA,OAA7B,iCAEI,MAAMR,CAAAA,GAAG,CAACM,YAAY,EAAb,CAAT,CAFJ,uBAGiB,MAAML,CAAAA,IAAI,CAACC,WAAD,uBAA6BM,OAAO,CAACC,EAArC,EAA2C,KAA3C,CAAkDD,OAAO,CAACE,IAA1D,CAAV,CAHjB,OAGUA,IAHV,+BAII,MAAMV,CAAAA,GAAG,CAACK,mBAAmB,CAACK,IAAD,CAApB,CAAT,CAJJ,wFAMIC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EANJ,iBAOI,MAAMX,CAAAA,IAAI,CAACG,gBAAD,CAAV,CAPJ,0CASI,MAAMJ,CAAAA,GAAG,CAACO,WAAW,EAAZ,CAAT,CATJ,8GAaA,MAAO,SAAUT,CAAAA,iBAAV,iJACL,MAAMC,CAAAA,SAAS,CAACI,iBAAD,CAAoBN,gBAApB,CAAf,CADK","sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\nimport { httpRequest } from '../services';\nimport {\n  updateHotDogStart,\n  updateHotDogFail,\n  updateHotDogSuccess,\n  loadingStart,\n  loadingStop\n} from '../redux/actions';\n\nfunction* callUpdateHotDog({ payload }) {\n  try {\n    yield put(loadingStart());\n    const data = yield call(httpRequest, `/api/update/${payload.id}`, 'PUT', payload.data);\n    yield put(updateHotDogSuccess(data));\n  } catch (e) {\n    console.log('Something is going wrong!')\n    yield call(updateHotDogFail);\n  } finally {\n    yield put(loadingStop());\n  }\n}\n\nexport function* updateHotDogSagas() {\n  yield takeEvery(updateHotDogStart, callUpdateHotDog);\n}"]},"metadata":{},"sourceType":"module"}