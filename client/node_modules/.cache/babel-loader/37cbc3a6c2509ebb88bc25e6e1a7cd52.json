{"ast":null,"code":"var _jsxFileName = \"/Users/igor/Desktop/testTask/client/src/components/hot-dog-item/hot-dog-item.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { showEditForm, hideEditForm } from '../../redux/actions';\nimport { editFormSelector, allHotDogsSelector } from '../../redux/selectors';\nimport { deleteHotDogStart, updateHotDogStart } from '../../redux/actions';\nimport './hot-dog-item.css';\n\nconst HotDogItem = ({\n  data,\n  isVisibleEditForm,\n  showEditForm,\n  deleteHotDogStart,\n  updateHotDogStart,\n  hideEditForm,\n  hotDogs\n}) => {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const names = hotDogs ? hotDogs.map(el => el.title) : [];\n  const {\n    hotdog_id: id,\n    title,\n    price,\n    description,\n    img\n  } = data;\n\n  const updateHotDog = data => {\n    updateHotDogStart(data);\n    hideEditForm();\n  };\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: \"hot-dog-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: img,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), isVisibleEditForm !== id && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"hot-dog-item__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hot-dog-item__price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  }, price, \" $\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"hot-dog-item__description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, description), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => showEditForm(id),\n    className: \"hot-dog-item__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Edit\")), isVisibleEditForm === id && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"edit-form\",\n    onSubmit: handleSubmit(data => updateHotDog({\n      data,\n      id\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, errors.title && errors.title.type === 'occupied' && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"You already have this point.\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"img\",\n    type: \"text\",\n    defaultValue: img,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"title\",\n    type: \"text\",\n    defaultValue: title,\n    ref: register({\n      required: true,\n      validate: {\n        occupied: value => {\n          let isOccupied;\n          names.forEach(el => {\n            if (value === el && value !== title) {\n              isOccupied = false;\n            }\n          });\n          return isOccupied;\n        }\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"price\",\n    type: \"number\",\n    defaultValue: price,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"description\",\n    className: \"edit-form__description\",\n    defaultValue: description,\n    ref: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"hot-dog-item__btn\",\n    onClick: () => deleteHotDogStart(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"hot-dog-item__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"Upgrade\")));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isVisibleEditForm: editFormSelector(state),\n    hotDogs: allHotDogsSelector(state)\n  };\n};\n\nconst mapDispatchToProps = {\n  showEditForm,\n  hideEditForm,\n  deleteHotDogStart,\n  updateHotDogStart\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HotDogItem);","map":{"version":3,"sources":["/Users/igor/Desktop/testTask/client/src/components/hot-dog-item/hot-dog-item.js"],"names":["React","connect","useForm","showEditForm","hideEditForm","editFormSelector","allHotDogsSelector","deleteHotDogStart","updateHotDogStart","HotDogItem","data","isVisibleEditForm","hotDogs","register","handleSubmit","errors","names","map","el","title","hotdog_id","id","price","description","img","updateHotDog","type","required","validate","occupied","value","isOccupied","forEach","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { showEditForm, hideEditForm } from '../../redux/actions'\nimport { editFormSelector, allHotDogsSelector } from '../../redux/selectors';\nimport { deleteHotDogStart, updateHotDogStart } from '../../redux/actions';\n\nimport './hot-dog-item.css';\n\nconst HotDogItem = ({data, isVisibleEditForm, showEditForm, deleteHotDogStart, updateHotDogStart, hideEditForm, hotDogs}) => {\n\n    const { register, handleSubmit, errors } = useForm(); \n    const names = hotDogs? hotDogs.map((el) => el.title): [];\n\n    const { hotdog_id: id, title, price, description, img } = data;\n\n    const updateHotDog = (data) => {\n        updateHotDogStart(data);\n        hideEditForm();\n    }\n\n    return (\n        <li className='hot-dog-item'>\n            <img src={img} alt=\"\"/>\n            {isVisibleEditForm !== id &&\n                <>\n                    <h3 className='hot-dog-item__title'>{title}</h3>\n                    <p className='hot-dog-item__price'>{price} $</p>\n                    <p className='hot-dog-item__description'>{description}</p>\n                    <button onClick={() => showEditForm(id)} className='hot-dog-item__btn'>Edit</button>\n                </>\n            }\n\n            {isVisibleEditForm === id && \n                <form className='edit-form' onSubmit={handleSubmit((data) => updateHotDog({data, id}))}>\n                    {errors.title && errors.title.type === 'occupied' && (\n                        <p className='error'>You already have this point.</p>\n                    )}\n                    <input name='img' type='text' defaultValue={img} ref={register({ required: true})} />\n\n                    <input name='title' type='text' defaultValue={title} ref={register({ required: true, validate: {\n                        occupied: (value) => {\n                            let isOccupied;\n                            names.forEach(el => {\n                                if(value === el && value !==title){\n                                    isOccupied = false\n                                }\n                            });\n                            return isOccupied;\n                        } \n                    } })}/>\n                    <input name='price' type='number' defaultValue={price} ref={register({ required: true })}/>\n                    <textarea \n                        name='description' \n                        className='edit-form__description'\n                        defaultValue={description} \n                        ref={register({ required: true })}>\n                    </textarea>\n                    <button  type='button' className='hot-dog-item__btn' onClick={() => deleteHotDogStart(id)} >Delete</button>\n                    <button type='submit' className='hot-dog-item__btn'>Upgrade</button>\n                </form>\n            }\n        </li>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isVisibleEditForm: editFormSelector(state),\n        hotDogs: allHotDogsSelector(state)\n    }\n}\n\nconst mapDispatchToProps = {\n    showEditForm,\n    hideEditForm,\n    deleteHotDogStart,\n    updateHotDogStart\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(HotDogItem);\n"]},"metadata":{},"sourceType":"module"}