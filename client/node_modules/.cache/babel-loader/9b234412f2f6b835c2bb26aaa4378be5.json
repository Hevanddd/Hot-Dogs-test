{"ast":null,"code":"import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { getReducers } from './core/redux/reducers';\nimport { rootSagas } from './core/sagas';\nconst initialState = {};\nconst enhancerList = []; // eslint-disable-next-line no-underscore-dangle\n\nconst devToolsExtension = window && window.__REDUX_DEVTOOLS_EXTENSION__;\n\nif (typeof devToolsExtension === 'function') {\n  enhancerList.push(devToolsExtension());\n}\n\nexport const getStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const store = createStore(combineReducers(getReducers()), initialState, compose(applyMiddleware(...middlewares), ...enhancerList));\n  sagaMiddleware.run(rootSagas);\n  return store;\n};","map":{"version":3,"sources":["/Users/igor/Desktop/testTask/front-end/src/store.js"],"names":["applyMiddleware","combineReducers","compose","createStore","createSagaMiddleware","getReducers","rootSagas","initialState","enhancerList","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION__","push","getStore","sagaMiddleware","middlewares","store","run"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,OAA1C,EAAmDC,WAAnD,QAAqE,OAArE;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAAQC,SAAR,QAAwB,cAAxB;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CACA;;AACA,MAAMC,iBAAiB,GAAGC,MAAM,IAAIA,MAAM,CAACC,4BAA3C;;AAEA,IAAI,OAAOF,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CD,EAAAA,YAAY,CAACI,IAAb,CAAkBH,iBAAiB,EAAnC;AACD;;AAED,OAAO,MAAMI,QAAQ,GAAG,MAAM;AAC5B,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,WAAW,GAAG,CAACD,cAAD,CAApB;AAEA,QAAME,KAAK,GAAGb,WAAW,CACvBF,eAAe,CAACI,WAAW,EAAZ,CADQ,EAEvBE,YAFuB,EAGvBL,OAAO,CAACF,eAAe,CAAC,GAAGe,WAAJ,CAAhB,EAAkC,GAAGP,YAArC,CAHgB,CAAzB;AAKAM,EAAAA,cAAc,CAACG,GAAf,CAAmBX,SAAnB;AACA,SAAOU,KAAP;AACD,CAXM","sourcesContent":["import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {getReducers} from './core/redux/reducers';\nimport {rootSagas} from './core/sagas';\n\nconst initialState = {};\n\nconst enhancerList = [];\n// eslint-disable-next-line no-underscore-dangle\nconst devToolsExtension = window && window.__REDUX_DEVTOOLS_EXTENSION__;\n\nif (typeof devToolsExtension === 'function') {\n  enhancerList.push(devToolsExtension());\n}\n\nexport const getStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n\n  const store = createStore(\n    combineReducers(getReducers()),\n    initialState,\n    compose(applyMiddleware(...middlewares), ...enhancerList)\n  );\n  sagaMiddleware.run(rootSagas);\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}